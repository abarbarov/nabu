// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/nabu.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusType int32

const (
	StatusType_UNKNOWN StatusType = 0
	StatusType_SUCCESS StatusType = 1
	StatusType_ERROR   StatusType = 2
	StatusType_WARNING StatusType = 3
	StatusType_PENDING StatusType = 4
)

var StatusType_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "ERROR",
	3: "WARNING",
	4: "PENDING",
}

var StatusType_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCESS": 1,
	"ERROR":   2,
	"WARNING": 3,
	"PENDING": 4,
}

func (x StatusType) String() string {
	return proto.EnumName(StatusType_name, int32(x))
}

func (StatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{0}
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Project struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Repository           string   `protobuf:"bytes,3,opt,name=repository,proto3" json:"repository,omitempty"`
	Owner                string   `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{1}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Project) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Project) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *Project) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type Repository struct {
	Id                   int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Branches             []*Branch `protobuf:"bytes,4,rep,name=branches,proto3" json:"branches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{2}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Repository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Repository) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Repository) GetBranches() []*Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

type Branch struct {
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Commits              []*Commit `protobuf:"bytes,3,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Branch) Reset()         { *m = Branch{} }
func (m *Branch) String() string { return proto.CompactTextString(m) }
func (*Branch) ProtoMessage()    {}
func (*Branch) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{3}
}

func (m *Branch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Branch.Unmarshal(m, b)
}
func (m *Branch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Branch.Marshal(b, m, deterministic)
}
func (m *Branch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Branch.Merge(m, src)
}
func (m *Branch) XXX_Size() int {
	return xxx_messageInfo_Branch.Size(m)
}
func (m *Branch) XXX_DiscardUnknown() {
	xxx_messageInfo_Branch.DiscardUnknown(m)
}

var xxx_messageInfo_Branch proto.InternalMessageInfo

func (m *Branch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Branch) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

type Commit struct {
	Message              string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Sha                  string               `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{4}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *Commit) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Message struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message              string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Status               StatusType           `protobuf:"varint,4,opt,name=status,proto3,enum=protobuf.StatusType" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{5}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Message) GetStatus() StatusType {
	if m != nil {
		return m.Status
	}
	return StatusType_UNKNOWN
}

type Error struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Field                string   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{6}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Error) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type EmptyRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{7}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

func (m *EmptyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type BranchRequest struct {
	RepoId               int64    `protobuf:"varint,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BranchRequest) Reset()         { *m = BranchRequest{} }
func (m *BranchRequest) String() string { return proto.CompactTextString(m) }
func (*BranchRequest) ProtoMessage()    {}
func (*BranchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{8}
}

func (m *BranchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchRequest.Unmarshal(m, b)
}
func (m *BranchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchRequest.Marshal(b, m, deterministic)
}
func (m *BranchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchRequest.Merge(m, src)
}
func (m *BranchRequest) XXX_Size() int {
	return xxx_messageInfo_BranchRequest.Size(m)
}
func (m *BranchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BranchRequest proto.InternalMessageInfo

func (m *BranchRequest) GetRepoId() int64 {
	if m != nil {
		return m.RepoId
	}
	return 0
}

func (m *BranchRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CommitsRequest struct {
	RepoId               int64    `protobuf:"varint,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	BranchName           string   `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitsRequest) Reset()         { *m = CommitsRequest{} }
func (m *CommitsRequest) String() string { return proto.CompactTextString(m) }
func (*CommitsRequest) ProtoMessage()    {}
func (*CommitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{9}
}

func (m *CommitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitsRequest.Unmarshal(m, b)
}
func (m *CommitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitsRequest.Marshal(b, m, deterministic)
}
func (m *CommitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitsRequest.Merge(m, src)
}
func (m *CommitsRequest) XXX_Size() int {
	return xxx_messageInfo_CommitsRequest.Size(m)
}
func (m *CommitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitsRequest proto.InternalMessageInfo

func (m *CommitsRequest) GetRepoId() int64 {
	if m != nil {
		return m.RepoId
	}
	return 0
}

func (m *CommitsRequest) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *CommitsRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type BuildRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Branch               string   `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Sha                  string   `protobuf:"bytes,3,opt,name=sha,proto3" json:"sha,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildRequest) Reset()         { *m = BuildRequest{} }
func (m *BuildRequest) String() string { return proto.CompactTextString(m) }
func (*BuildRequest) ProtoMessage()    {}
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{10}
}

func (m *BuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRequest.Unmarshal(m, b)
}
func (m *BuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRequest.Marshal(b, m, deterministic)
}
func (m *BuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRequest.Merge(m, src)
}
func (m *BuildRequest) XXX_Size() int {
	return xxx_messageInfo_BuildRequest.Size(m)
}
func (m *BuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRequest proto.InternalMessageInfo

func (m *BuildRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *BuildRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *BuildRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *BuildRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CopyRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Sha                  string   `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyRequest) Reset()         { *m = CopyRequest{} }
func (m *CopyRequest) String() string { return proto.CompactTextString(m) }
func (*CopyRequest) ProtoMessage()    {}
func (*CopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{11}
}

func (m *CopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyRequest.Unmarshal(m, b)
}
func (m *CopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyRequest.Marshal(b, m, deterministic)
}
func (m *CopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyRequest.Merge(m, src)
}
func (m *CopyRequest) XXX_Size() int {
	return xxx_messageInfo_CopyRequest.Size(m)
}
func (m *CopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CopyRequest proto.InternalMessageInfo

func (m *CopyRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *CopyRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *CopyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{12}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type InstallRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Sha                  string   `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallRequest) Reset()         { *m = InstallRequest{} }
func (m *InstallRequest) String() string { return proto.CompactTextString(m) }
func (*InstallRequest) ProtoMessage()    {}
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{13}
}

func (m *InstallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallRequest.Unmarshal(m, b)
}
func (m *InstallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallRequest.Marshal(b, m, deterministic)
}
func (m *InstallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallRequest.Merge(m, src)
}
func (m *InstallRequest) XXX_Size() int {
	return xxx_messageInfo_InstallRequest.Size(m)
}
func (m *InstallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InstallRequest proto.InternalMessageInfo

func (m *InstallRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *InstallRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *InstallRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *InstallRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RestartRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Sha                  string   `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartRequest) Reset()         { *m = RestartRequest{} }
func (m *RestartRequest) String() string { return proto.CompactTextString(m) }
func (*RestartRequest) ProtoMessage()    {}
func (*RestartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{14}
}

func (m *RestartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartRequest.Unmarshal(m, b)
}
func (m *RestartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartRequest.Marshal(b, m, deterministic)
}
func (m *RestartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartRequest.Merge(m, src)
}
func (m *RestartRequest) XXX_Size() int {
	return xxx_messageInfo_RestartRequest.Size(m)
}
func (m *RestartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestartRequest proto.InternalMessageInfo

func (m *RestartRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *RestartRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *RestartRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *RestartRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DownloadRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Sha                  string   `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{15}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *DownloadRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *DownloadRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *DownloadRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UploadRequest struct {
	ProjectId            int64    `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Sha                  string   `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{16}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetProjectId() int64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *UploadRequest) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *UploadRequest) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *UploadRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type MessageResponse struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{17}
}

func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (m *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(m, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type ListProjectsResponse struct {
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{18}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type ListBranchesResponse struct {
	Branch               *Branch  `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBranchesResponse) Reset()         { *m = ListBranchesResponse{} }
func (m *ListBranchesResponse) String() string { return proto.CompactTextString(m) }
func (*ListBranchesResponse) ProtoMessage()    {}
func (*ListBranchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{19}
}

func (m *ListBranchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBranchesResponse.Unmarshal(m, b)
}
func (m *ListBranchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBranchesResponse.Marshal(b, m, deterministic)
}
func (m *ListBranchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBranchesResponse.Merge(m, src)
}
func (m *ListBranchesResponse) XXX_Size() int {
	return xxx_messageInfo_ListBranchesResponse.Size(m)
}
func (m *ListBranchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBranchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBranchesResponse proto.InternalMessageInfo

func (m *ListBranchesResponse) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type ListCommitsResponse struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCommitsResponse) Reset()         { *m = ListCommitsResponse{} }
func (m *ListCommitsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommitsResponse) ProtoMessage()    {}
func (*ListCommitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{20}
}

func (m *ListCommitsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitsResponse.Unmarshal(m, b)
}
func (m *ListCommitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitsResponse.Marshal(b, m, deterministic)
}
func (m *ListCommitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitsResponse.Merge(m, src)
}
func (m *ListCommitsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCommitsResponse.Size(m)
}
func (m *ListCommitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitsResponse proto.InternalMessageInfo

func (m *ListCommitsResponse) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type AuthResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Errors               []*Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc20f0bf01baf8fa, []int{21}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *AuthResponse) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterEnum("protobuf.StatusType", StatusType_name, StatusType_value)
	proto.RegisterType((*User)(nil), "protobuf.User")
	proto.RegisterType((*Project)(nil), "protobuf.Project")
	proto.RegisterType((*Repository)(nil), "protobuf.Repository")
	proto.RegisterType((*Branch)(nil), "protobuf.Branch")
	proto.RegisterType((*Commit)(nil), "protobuf.Commit")
	proto.RegisterType((*Message)(nil), "protobuf.Message")
	proto.RegisterType((*Error)(nil), "protobuf.Error")
	proto.RegisterType((*EmptyRequest)(nil), "protobuf.EmptyRequest")
	proto.RegisterType((*BranchRequest)(nil), "protobuf.BranchRequest")
	proto.RegisterType((*CommitsRequest)(nil), "protobuf.CommitsRequest")
	proto.RegisterType((*BuildRequest)(nil), "protobuf.BuildRequest")
	proto.RegisterType((*CopyRequest)(nil), "protobuf.CopyRequest")
	proto.RegisterType((*AuthRequest)(nil), "protobuf.AuthRequest")
	proto.RegisterType((*InstallRequest)(nil), "protobuf.InstallRequest")
	proto.RegisterType((*RestartRequest)(nil), "protobuf.RestartRequest")
	proto.RegisterType((*DownloadRequest)(nil), "protobuf.DownloadRequest")
	proto.RegisterType((*UploadRequest)(nil), "protobuf.UploadRequest")
	proto.RegisterType((*MessageResponse)(nil), "protobuf.MessageResponse")
	proto.RegisterType((*ListProjectsResponse)(nil), "protobuf.ListProjectsResponse")
	proto.RegisterType((*ListBranchesResponse)(nil), "protobuf.ListBranchesResponse")
	proto.RegisterType((*ListCommitsResponse)(nil), "protobuf.ListCommitsResponse")
	proto.RegisterType((*AuthResponse)(nil), "protobuf.AuthResponse")
}

func init() { proto.RegisterFile("protobuf/nabu.proto", fileDescriptor_dc20f0bf01baf8fa) }

var fileDescriptor_dc20f0bf01baf8fa = []byte{
	// 937 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0x66, 0xbd, 0xce, 0xda, 0x3e, 0xeb, 0x3a, 0x66, 0x1a, 0xda, 0xc5, 0x52, 0xdb, 0x68, 0x85,
	0x44, 0x54, 0xa2, 0x34, 0x32, 0x37, 0x80, 0x20, 0xb4, 0x71, 0x2d, 0x62, 0x15, 0xdc, 0x6a, 0x9c,
	0xa8, 0x17, 0x5c, 0x94, 0xb5, 0x3d, 0x49, 0x96, 0xee, 0xee, 0x2c, 0x3b, 0x63, 0x42, 0x9e, 0x85,
	0x17, 0xe0, 0x31, 0xd1, 0xfc, 0xed, 0x8e, 0x7f, 0x92, 0x52, 0x21, 0xe5, 0x6e, 0xcf, 0xdf, 0x77,
	0xce, 0xce, 0xf9, 0xe6, 0x1b, 0xb8, 0x9f, 0x17, 0x94, 0xd3, 0xe9, 0xe2, 0xfc, 0x59, 0x16, 0x4d,
	0x17, 0x07, 0xd2, 0x42, 0x4d, 0xe3, 0xec, 0x3d, 0xb9, 0xa0, 0xf4, 0x22, 0x21, 0xcf, 0xca, 0x2c,
	0x1e, 0xa7, 0x84, 0xf1, 0x28, 0xcd, 0x55, 0x6a, 0xb8, 0x0f, 0xf5, 0x33, 0x46, 0x0a, 0xd4, 0x81,
	0x5a, 0x3c, 0x0f, 0x9c, 0x5d, 0x67, 0xcf, 0xc5, 0xb5, 0x78, 0x8e, 0x76, 0x60, 0x8b, 0xd3, 0xf7,
	0x24, 0x0b, 0x6a, 0xbb, 0xce, 0x5e, 0x0b, 0x2b, 0x23, 0x24, 0xd0, 0x78, 0x53, 0xd0, 0xdf, 0xc9,
	0x8c, 0x6f, 0x2c, 0x88, 0x79, 0x42, 0xca, 0x02, 0x61, 0xa0, 0xc7, 0x00, 0x05, 0xc9, 0x29, 0x8b,
	0x39, 0x2d, 0xae, 0x03, 0x57, 0x86, 0x2c, 0x8f, 0xa8, 0xa2, 0x57, 0x19, 0x29, 0x82, 0xba, 0xaa,
	0x92, 0x46, 0x98, 0x03, 0xe0, 0x2a, 0x67, 0xb5, 0x13, 0x82, 0x7a, 0x16, 0xa5, 0xa6, 0x91, 0xfc,
	0x46, 0x5d, 0x70, 0xdf, 0x13, 0xd3, 0x40, 0x7c, 0xa2, 0x7d, 0x68, 0x4e, 0x8b, 0x28, 0x9b, 0x5d,
	0x12, 0x16, 0xd4, 0x77, 0xdd, 0x3d, 0xbf, 0xdf, 0x3d, 0x30, 0xa7, 0x70, 0x70, 0x2c, 0x23, 0xb8,
	0xcc, 0x08, 0x4f, 0xc0, 0x53, 0xbe, 0x8d, 0xe8, 0x4f, 0xa1, 0x31, 0xa3, 0x69, 0x1a, 0x73, 0x16,
	0xb8, 0xab, 0x50, 0x03, 0x19, 0xc0, 0x26, 0x21, 0xcc, 0xc0, 0x53, 0x2e, 0x14, 0x40, 0x23, 0x25,
	0x8c, 0x45, 0x17, 0x44, 0x0e, 0xdf, 0xc2, 0xc6, 0x14, 0xd3, 0xb2, 0xcb, 0x48, 0xb7, 0x10, 0x9f,
	0xe8, 0x1b, 0x68, 0x95, 0x9b, 0x91, 0x7f, 0xe1, 0xf7, 0x7b, 0x07, 0x6a, 0x77, 0x55, 0xab, 0x53,
	0x93, 0x81, 0xab, 0xe4, 0xf0, 0x6f, 0x07, 0x1a, 0xbf, 0x68, 0xdc, 0xd5, 0x93, 0x5a, 0x42, 0xad,
	0x7d, 0x04, 0xaa, 0x3d, 0xbb, 0xbb, 0x3c, 0xfb, 0x3e, 0x78, 0x8c, 0x47, 0x7c, 0xc1, 0xe4, 0xca,
	0x3a, 0xfd, 0x9d, 0x0a, 0x69, 0x22, 0xfd, 0xa7, 0xd7, 0x39, 0xc1, 0x3a, 0x27, 0x1c, 0xc2, 0xd6,
	0xb0, 0x28, 0x68, 0x21, 0x8e, 0x75, 0x46, 0xe7, 0x44, 0x0f, 0x27, 0xbf, 0xc5, 0xf2, 0xcf, 0x63,
	0x92, 0xcc, 0x0d, 0x65, 0xa4, 0x21, 0x32, 0x39, 0xf9, 0x8b, 0xeb, 0xbe, 0xf2, 0x3b, 0xfc, 0x02,
	0xda, 0xc3, 0x34, 0xe7, 0xd7, 0x98, 0xfc, 0xb1, 0x20, 0x8c, 0x57, 0xec, 0x74, 0x6c, 0x76, 0x1e,
	0xc1, 0x3d, 0xbd, 0x58, 0x9d, 0xf6, 0x10, 0x1a, 0x82, 0x6b, 0xef, 0xca, 0x43, 0xf1, 0x84, 0x39,
	0xba, 0x89, 0xdd, 0xbf, 0x41, 0x47, 0xad, 0x8e, 0x7d, 0x10, 0xe0, 0x09, 0xf8, 0x8a, 0x3b, 0xef,
	0x2c, 0xb2, 0x80, 0x72, 0x8d, 0x05, 0x65, 0xca, 0x0e, 0xae, 0xdd, 0x21, 0x85, 0xf6, 0xf1, 0x22,
	0x4e, 0xe6, 0x06, 0xff, 0x11, 0x40, 0xae, 0xee, 0x53, 0xd5, 0xa2, 0xa5, 0x3d, 0xa3, 0x39, 0x7a,
	0x00, 0x9e, 0x82, 0xd4, 0x0d, 0xb4, 0x65, 0xf8, 0xe3, 0x56, 0xfc, 0x29, 0xdb, 0xd5, 0xed, 0x76,
	0xa7, 0xe0, 0x0f, 0x68, 0x7e, 0xfd, 0x1f, 0xbb, 0xad, 0xb3, 0x72, 0xf3, 0x4f, 0x0c, 0xc1, 0x7f,
	0xb1, 0xe0, 0xe5, 0x21, 0xf7, 0xa0, 0xb9, 0x60, 0xa4, 0x90, 0xe7, 0xa0, 0xd6, 0x51, 0xda, 0x22,
	0x96, 0x47, 0x8c, 0x5d, 0xd1, 0xc2, 0x2c, 0xb9, 0xb4, 0xc3, 0x14, 0x3a, 0xa3, 0x8c, 0xf1, 0x28,
	0x49, 0xfe, 0xcf, 0x7c, 0x33, 0x9a, 0xd0, 0xc2, 0xcc, 0x27, 0x8d, 0x1b, 0xce, 0x22, 0x85, 0x0e,
	0x16, 0xe4, 0x2e, 0xf8, 0x9d, 0xb4, 0xcb, 0x60, 0xfb, 0x25, 0xbd, 0xca, 0x12, 0x1a, 0xcd, 0xef,
	0xa4, 0x5f, 0x02, 0xf7, 0xce, 0xf2, 0x3b, 0xeb, 0x76, 0x04, 0xdb, 0x5a, 0x73, 0x30, 0x61, 0x39,
	0xcd, 0x18, 0x41, 0x5f, 0x2d, 0xab, 0x9d, 0xdf, 0xff, 0xb4, 0x12, 0x06, 0x93, 0x6b, 0x32, 0xc2,
	0x01, 0xec, 0xfc, 0x1c, 0x33, 0xae, 0xdf, 0x12, 0x66, 0x83, 0xe8, 0x11, 0xd7, 0x41, 0x74, 0x32,
	0x36, 0x19, 0xe1, 0x73, 0x05, 0x72, 0xac, 0x35, 0xbc, 0x04, 0xd9, 0x2b, 0x6f, 0x8d, 0xc2, 0x58,
	0xd7, 0x7d, 0x1d, 0x0f, 0x7f, 0x84, 0xfb, 0x02, 0xa1, 0xbc, 0xf4, 0x15, 0x80, 0x52, 0xf3, 0x75,
	0x00, 0xad, 0xf6, 0x3a, 0x1e, 0xfe, 0x0a, 0x6d, 0x75, 0x15, 0x74, 0x65, 0x08, 0x75, 0xc1, 0x7d,
	0x5d, 0xd7, 0xa9, 0xea, 0xc4, 0x1b, 0x8b, 0x65, 0x0c, 0x7d, 0x09, 0x1e, 0x11, 0x92, 0xc8, 0x82,
	0x9a, 0x7c, 0x4b, 0xb6, 0xab, 0x2c, 0x29, 0x95, 0x58, 0x87, 0x9f, 0xbe, 0x02, 0xa8, 0x14, 0x15,
	0xf9, 0xd0, 0x38, 0x1b, 0xbf, 0x1a, 0xbf, 0x7e, 0x3b, 0xee, 0x7e, 0x22, 0x8c, 0xc9, 0xd9, 0x60,
	0x30, 0x9c, 0x4c, 0xba, 0x0e, 0x6a, 0xc1, 0xd6, 0x10, 0xe3, 0xd7, 0xb8, 0x5b, 0x13, 0xfe, 0xb7,
	0x2f, 0xf0, 0x78, 0x34, 0xfe, 0xa9, 0xeb, 0x0a, 0xe3, 0xcd, 0x70, 0xfc, 0x52, 0x18, 0xf5, 0xfe,
	0x3f, 0x1e, 0xf8, 0xe3, 0x68, 0xba, 0x98, 0x90, 0xe2, 0xcf, 0x78, 0x46, 0xd0, 0x0f, 0x6a, 0x72,
	0x92, 0xf1, 0x78, 0x16, 0x71, 0x82, 0x3e, 0xab, 0xa6, 0xb0, 0x2e, 0x77, 0xef, 0xc1, 0xaa, 0x5b,
	0xff, 0xe8, 0xb7, 0xd0, 0xc4, 0xe4, 0x22, 0x66, 0x9c, 0x14, 0x1f, 0x5b, 0x7a, 0x04, 0x6d, 0x4c,
	0xce, 0x0b, 0xc2, 0x2e, 0x4f, 0x05, 0x97, 0x90, 0x95, 0x67, 0x6b, 0xfc, 0x8d, 0xf5, 0x27, 0xd0,
	0xb6, 0xb9, 0x73, 0x63, 0xfd, 0xe3, 0xca, 0xbf, 0x89, 0x6b, 0x87, 0x0e, 0x1a, 0x29, 0x24, 0x43,
	0x20, 0xf4, 0x70, 0x8d, 0x28, 0x9b, 0xa1, 0x56, 0x19, 0x77, 0xe8, 0xa0, 0x13, 0xf0, 0x2d, 0x26,
	0xa1, 0x60, 0x95, 0x31, 0xe6, 0x45, 0xe9, 0x3d, 0x5a, 0x86, 0x5a, 0xa1, 0xde, 0xa1, 0x83, 0xbe,
	0x87, 0x2d, 0xf9, 0x44, 0xd8, 0xff, 0x65, 0xbf, 0x19, 0xbd, 0xcf, 0xd7, 0xef, 0x55, 0x55, 0xfd,
	0x1d, 0xd4, 0x85, 0xe2, 0xdb, 0x3b, 0xb1, 0x5e, 0x80, 0xdb, 0x6b, 0x9f, 0x43, 0x43, 0x0b, 0xb2,
	0x3d, 0xff, 0xb2, 0x46, 0x7f, 0x10, 0x41, 0x6b, 0xac, 0x8d, 0xb0, 0x2c, 0xbb, 0xb7, 0x23, 0x1c,
	0x43, 0xd3, 0xc8, 0x26, 0xb2, 0x12, 0x57, 0xa4, 0xf4, 0x76, 0x8c, 0x23, 0xf0, 0x94, 0x14, 0xda,
	0x0b, 0x5d, 0x12, 0xc7, 0x5b, 0xeb, 0xa7, 0x9e, 0x8c, 0x7d, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xda, 0xdf, 0x55, 0xa2, 0x5b, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NabuServiceClient is the client API for NabuService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NabuServiceClient interface {
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	Register(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	RefreshToken(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	ListProjects(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (NabuService_ListProjectsClient, error)
	ListBranches(ctx context.Context, in *BranchRequest, opts ...grpc.CallOption) (NabuService_ListBranchesClient, error)
	ListCommits(ctx context.Context, in *CommitsRequest, opts ...grpc.CallOption) (NabuService_ListCommitsClient, error)
	Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (NabuService_BuildClient, error)
	Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (NabuService_CopyClient, error)
	Install(ctx context.Context, in *InstallRequest, opts ...grpc.CallOption) (NabuService_InstallClient, error)
	Restart(ctx context.Context, in *RestartRequest, opts ...grpc.CallOption) (NabuService_RestartClient, error)
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (NabuService_DownloadClient, error)
	Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (NabuService_UploadClient, error)
}

type nabuServiceClient struct {
	cc *grpc.ClientConn
}

func NewNabuServiceClient(cc *grpc.ClientConn) NabuServiceClient {
	return &nabuServiceClient{cc}
}

func (c *nabuServiceClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/protobuf.NabuService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nabuServiceClient) Register(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/protobuf.NabuService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nabuServiceClient) RefreshToken(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/protobuf.NabuService/RefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nabuServiceClient) ListProjects(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (NabuService_ListProjectsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[0], "/protobuf.NabuService/ListProjects", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceListProjectsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_ListProjectsClient interface {
	Recv() (*ListProjectsResponse, error)
	grpc.ClientStream
}

type nabuServiceListProjectsClient struct {
	grpc.ClientStream
}

func (x *nabuServiceListProjectsClient) Recv() (*ListProjectsResponse, error) {
	m := new(ListProjectsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) ListBranches(ctx context.Context, in *BranchRequest, opts ...grpc.CallOption) (NabuService_ListBranchesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[1], "/protobuf.NabuService/ListBranches", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceListBranchesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_ListBranchesClient interface {
	Recv() (*ListBranchesResponse, error)
	grpc.ClientStream
}

type nabuServiceListBranchesClient struct {
	grpc.ClientStream
}

func (x *nabuServiceListBranchesClient) Recv() (*ListBranchesResponse, error) {
	m := new(ListBranchesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) ListCommits(ctx context.Context, in *CommitsRequest, opts ...grpc.CallOption) (NabuService_ListCommitsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[2], "/protobuf.NabuService/ListCommits", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceListCommitsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_ListCommitsClient interface {
	Recv() (*ListCommitsResponse, error)
	grpc.ClientStream
}

type nabuServiceListCommitsClient struct {
	grpc.ClientStream
}

func (x *nabuServiceListCommitsClient) Recv() (*ListCommitsResponse, error) {
	m := new(ListCommitsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (NabuService_BuildClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[3], "/protobuf.NabuService/Build", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceBuildClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_BuildClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceBuildClient struct {
	grpc.ClientStream
}

func (x *nabuServiceBuildClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (NabuService_CopyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[4], "/protobuf.NabuService/Copy", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceCopyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_CopyClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceCopyClient struct {
	grpc.ClientStream
}

func (x *nabuServiceCopyClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Install(ctx context.Context, in *InstallRequest, opts ...grpc.CallOption) (NabuService_InstallClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[5], "/protobuf.NabuService/Install", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceInstallClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_InstallClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceInstallClient struct {
	grpc.ClientStream
}

func (x *nabuServiceInstallClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Restart(ctx context.Context, in *RestartRequest, opts ...grpc.CallOption) (NabuService_RestartClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[6], "/protobuf.NabuService/Restart", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceRestartClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_RestartClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceRestartClient struct {
	grpc.ClientStream
}

func (x *nabuServiceRestartClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (NabuService_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[7], "/protobuf.NabuService/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_DownloadClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceDownloadClient struct {
	grpc.ClientStream
}

func (x *nabuServiceDownloadClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nabuServiceClient) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (NabuService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NabuService_serviceDesc.Streams[8], "/protobuf.NabuService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &nabuServiceUploadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NabuService_UploadClient interface {
	Recv() (*MessageResponse, error)
	grpc.ClientStream
}

type nabuServiceUploadClient struct {
	grpc.ClientStream
}

func (x *nabuServiceUploadClient) Recv() (*MessageResponse, error) {
	m := new(MessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NabuServiceServer is the server API for NabuService service.
type NabuServiceServer interface {
	Authenticate(context.Context, *AuthRequest) (*AuthResponse, error)
	Register(context.Context, *AuthRequest) (*AuthResponse, error)
	RefreshToken(context.Context, *EmptyRequest) (*AuthResponse, error)
	ListProjects(*EmptyRequest, NabuService_ListProjectsServer) error
	ListBranches(*BranchRequest, NabuService_ListBranchesServer) error
	ListCommits(*CommitsRequest, NabuService_ListCommitsServer) error
	Build(*BuildRequest, NabuService_BuildServer) error
	Copy(*CopyRequest, NabuService_CopyServer) error
	Install(*InstallRequest, NabuService_InstallServer) error
	Restart(*RestartRequest, NabuService_RestartServer) error
	Download(*DownloadRequest, NabuService_DownloadServer) error
	Upload(*UploadRequest, NabuService_UploadServer) error
}

func RegisterNabuServiceServer(s *grpc.Server, srv NabuServiceServer) {
	s.RegisterService(&_NabuService_serviceDesc, srv)
}

func _NabuService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NabuServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.NabuService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NabuServiceServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NabuService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NabuServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.NabuService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NabuServiceServer).Register(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NabuService_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NabuServiceServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.NabuService/RefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NabuServiceServer).RefreshToken(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NabuService_ListProjects_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).ListProjects(m, &nabuServiceListProjectsServer{stream})
}

type NabuService_ListProjectsServer interface {
	Send(*ListProjectsResponse) error
	grpc.ServerStream
}

type nabuServiceListProjectsServer struct {
	grpc.ServerStream
}

func (x *nabuServiceListProjectsServer) Send(m *ListProjectsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_ListBranches_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BranchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).ListBranches(m, &nabuServiceListBranchesServer{stream})
}

type NabuService_ListBranchesServer interface {
	Send(*ListBranchesResponse) error
	grpc.ServerStream
}

type nabuServiceListBranchesServer struct {
	grpc.ServerStream
}

func (x *nabuServiceListBranchesServer) Send(m *ListBranchesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_ListCommits_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CommitsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).ListCommits(m, &nabuServiceListCommitsServer{stream})
}

type NabuService_ListCommitsServer interface {
	Send(*ListCommitsResponse) error
	grpc.ServerStream
}

type nabuServiceListCommitsServer struct {
	grpc.ServerStream
}

func (x *nabuServiceListCommitsServer) Send(m *ListCommitsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Build_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BuildRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Build(m, &nabuServiceBuildServer{stream})
}

type NabuService_BuildServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceBuildServer struct {
	grpc.ServerStream
}

func (x *nabuServiceBuildServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Copy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CopyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Copy(m, &nabuServiceCopyServer{stream})
}

type NabuService_CopyServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceCopyServer struct {
	grpc.ServerStream
}

func (x *nabuServiceCopyServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Install_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InstallRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Install(m, &nabuServiceInstallServer{stream})
}

type NabuService_InstallServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceInstallServer struct {
	grpc.ServerStream
}

func (x *nabuServiceInstallServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Restart_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RestartRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Restart(m, &nabuServiceRestartServer{stream})
}

type NabuService_RestartServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceRestartServer struct {
	grpc.ServerStream
}

func (x *nabuServiceRestartServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Download(m, &nabuServiceDownloadServer{stream})
}

type NabuService_DownloadServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceDownloadServer struct {
	grpc.ServerStream
}

func (x *nabuServiceDownloadServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NabuService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UploadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NabuServiceServer).Upload(m, &nabuServiceUploadServer{stream})
}

type NabuService_UploadServer interface {
	Send(*MessageResponse) error
	grpc.ServerStream
}

type nabuServiceUploadServer struct {
	grpc.ServerStream
}

func (x *nabuServiceUploadServer) Send(m *MessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NabuService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.NabuService",
	HandlerType: (*NabuServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _NabuService_Authenticate_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _NabuService_Register_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _NabuService_RefreshToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListProjects",
			Handler:       _NabuService_ListProjects_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListBranches",
			Handler:       _NabuService_ListBranches_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListCommits",
			Handler:       _NabuService_ListCommits_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Build",
			Handler:       _NabuService_Build_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Copy",
			Handler:       _NabuService_Copy_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Install",
			Handler:       _NabuService_Install_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Restart",
			Handler:       _NabuService_Restart_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _NabuService_Download_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Upload",
			Handler:       _NabuService_Upload_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/nabu.proto",
}
